<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>